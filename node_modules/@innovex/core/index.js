const {
	fileChecker,
	argumentValidator,
	cl
} = require("./functions.js");
const fs = require("fs");


const componentValidation = {
	mandatory: {
		"name": "string",
		"htmlFilePath/html": "string",
	},
	optional: {
		"cssFilePath": "string",
		"css": "string",
		"js": "string",
		"jsFilePath": "string"
	}
}
function component() {};

(function () {
	this.add = function (args) {
		argumentValidator(componentValidation, args);
		if (args.htmlFilePath) {
			fileChecker(args.htmlFilePath);
		}
		if (args.cssFilePath) {
			fileChecker(args.cssFilePath);
		}
		if (args.jsFilePath) {
			fileChecker(args.jsFilePath);
		}
		this[args.name] = {};
		for (var i in args) {
			this[args.name][i] = args[i]
		}
	}
}).call(component.prototype);


const routerValidation = {
	mandatory: {
		"path": "string",
		"component": "string"
	},
	optional: {
		"title": "string"
	}
}
function router() {}
(function () {
	this.link = function(arg) {
		this.components = arg;
	}
	this.add = function(o) {
		argumentValidator(routerValidation, o);
		if (this[o.path]) {
			cl.err("route already exist");
		}
		if (this.components[o.component]) {
			this[o.path] = {};
			for (var i in o) {
				this[o.path][i] = o[i];
			}
		} else {
			cl.err(o.component+": component doesn't exists ");;
		}
	}
}.call(router.prototype))


module.exports = {
	router, component
};